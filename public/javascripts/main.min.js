"use strict";

angular.module("SimpleWeather", []);

"use strict";

angular.module("SimpleWeather").controller("WeatherCtrl", function($scope, location, OpenWeatherMap) {
    console.log("ng run");
    $scope.now = {};
    $scope.forecast = [];
    $scope.next7d = {};
    $scope.next7d2 = [];
    location.get().success(function success(data) {
        $scope.city = data.city;
        $scope.loc = data.loc;
        updateWeather($scope.city);
    });
    function updateWeather(city) {
        OpenWeatherMap.now(city).success(function success(data) {
            $scope.now.temp = data.main.temp;
            $scope.now.tempMax = data.main.temp_max;
            $scope.now.tempMin = data.main.temp_min;
            $scope.now.description = data.weather[0].description;
            $scope.now.icon = data.weather[0].icon;
        });
        OpenWeatherMap.forecast().success(function success(data) {
            $scope.forecast = [];
            var list = data.list;
            list.length = 3;
            list.forEach(function(ele) {
                var _time = new Date(ele.dt * 1e3);
                $scope.forecast.push({
                    time: ele.dt * 1e3,
                    tempMin: ele.main.temp_min,
                    tempMax: ele.main.temp_max,
                    description: ele.weather[0].description,
                    icon: ele.weather[0].icon
                });
            });
        });
        OpenWeatherMap.next7d().success(function success(data) {
            console.log("next7d", data);
            $scope.next7d.date = [];
            $scope.next7d.icon = [];
            $scope.next7d.tempMin = [];
            $scope.next7d.tempMax = [];
            $scope.next7d.description = [];
            var list = data.list;
            list.forEach(function(weather, index) {
                $scope.next7d.date[index] = weather.dt * 1e3;
                $scope.next7d.tempMin[index] = weather.temp.min;
                $scope.next7d.tempMax[index] = weather.temp.max;
                $scope.next7d.description[index] = weather.weather[0].description;
                $scope.next7d.icon[index] = weather.weather[0].icon;
                $scope.next7d2.push({
                    date: weather.dt * 1e3,
                    tempMin: weather.temp.min,
                    tempMax: weather.temp.max,
                    description: weather.weather[0].description,
                    icon: weather.weather[0].icon
                });
            });
            console.log($scope.next7d2);
        });
    }
    function dateParse(_date) {
        return _date.getMonth() + 1 + "/" + _date.getDate();
    }
});

"use strict";

angular.module("SimpleWeather").factory("location", function($q, $http) {
    function get() {
        return $http.get("http://ipinfo.io/json");
    }
    return {
        get: get
    };
});

"use strict";

angular.module("SimpleWeather").factory("OpenWeatherMap", function($q, $http) {
    var localtion = {
        city: "Taipei",
        lat: undefined,
        lon: undefined
    };
    var _params = {
        lang: "zh_tw",
        units: "metric",
        q: localtion.city
    };
    function now(city) {
        var _apiUrl = "http://api.openweathermap.org/data/2.5/weather";
        var _params = {
            units: "metric",
            q: city,
            lang: "zh_tw"
        };
        return $http.get(_apiUrl, {
            params: _params
        });
    }
    function forecast() {
        var _apiUrl = "http://api.openweathermap.org/data/2.5/forecast";
        return $http.get(_apiUrl, {
            params: _params
        });
    }
    function next7d() {
        var _apiUrl = "http://api.openweathermap.org/data/2.5/forecast/daily";
        return $http.get(_apiUrl, {
            params: _params
        });
    }
    return {
        now: now,
        forecast: forecast,
        next7d: next7d
    };
});
//# sourceMappingURL=main.min.map